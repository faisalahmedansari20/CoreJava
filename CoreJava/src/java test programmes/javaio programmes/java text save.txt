public ConcurrentHashMap(int initialCapacity,float loadFactor,int concurrencyLevel)
what is the difference between HashMap and HashTable popular interview Question 
HashMap class Objects values are iterated by usinr the iterator  HashTable and vector is the only  class which uses enumerator  to iterate  the values of HashTable Object 
LinkedList can be iterated in reverse direction  using descendingiterator() while there is no descendingIterator() in arrayList  so we need to write our own  code to iterat  over the ArrayList in reverse direction 	
Comparable is an public interface which is used  to impose an natural ordering of the class that implments it .
objects are compared in comparable interfacce is using thier ACSII value whic h means comparable by default uses the sorting technique of JVM.
Collections.sort(Arrays.sort)
in comparavle only one sort sequence can be created  while in  comparator many sort sequence can be created.
comparator interface has the method public int compare(object obj2,object obj2)
while comparable interface has the method compareTo(object o)
comparable interface define in java.lang package while comparator is define in java.util package 
Map.Entry is the static nested class that stores the key/value pair that forms one element of HashMap.
Entry objects in the bucket class in the following way (hash,key,value,bucketindex) from this we can ensure that  we need hashvalue and bucket index besies key to get access to the desired Entry Object in the HashMap 
How HashMap remove removes key value pair in java 
Map.Entry is the static nested class that stores the key/vlaue  pair  that forms  one element of HashMap
Entry Object Stores in the bucket in the following way (hash,key,value,bucketIndex)
public class HashMap<K,V> extends AbstractMap<K,V> implements MAP<K,V>
{
indexFor
removeEntryForKey
recordRemoval(this)
removeEntryForKey()

recordRemoval( this)is a concrete method without anybody  it is invoked  it is invoked whenever the Entry is removed from the Table.
How HashMap and Hashtable works internally
two unequal Objects may return same hashCode()
but if twi Objects are equal by equals method then they must have the same hashCode()
it is requirement key Object in HashMap to implement the equals and hashCode method in java.
what happen when you call the get() method  with key Object t retrieve corresponding value from hash based collection 
key.hashCode() method is used to find the bucket location in backing array remember that HashMap is backed by array in java.and the value is returned by the hashCode function .
in backing array or better known as bucket key values are stored  in the form  of a nested class called if there is only one entry at bucket location then  the value from that entry  is returned pretty straightforward right.
what happen if two key  has same hashCode()  if multiple keys have the same hashCode()  then during put() operation collision has occured means multiple entry Objects stored in a bucket location each entry keeps track of another Entry form linked list data structure 
now if we need to retrieve the value Object in this situation 
then called hashCode() method of the key to find bucket location 
traverse thought linked list comparing keys in each entries using  keys.equals() until it returns .
HashMap and alll other hash table based Map implementation classes in java handle collision by chaining  they used linked list  to store map entries which ended in the same bucket due to a collision .if a key end up in same bucket due to a collision .if key end up in same bucket location where an entry's is already stored then this entry is  just added at the  head of the linked list there and this degrades the performance of the get() method of HashMap to O(n) from O(1) . in java started the balanced tree instead oflimked list for storing collide entries 
and in the worst case you will get a performance boost from O(n) to O(log) 
remove()
poll()
element()
peek()
remove() and poll() method is used to remove the Object and returns the head of the queue if the queue is empty then call to remove() method  will throw Exception  while  call to poll() method returns null.
collection interface defines the remove method to remove Objects from Collection .List interface adds another method remove(int index) which is used to remove Object at specific index..you need to iterator 's remove method .this method removes current  element from iterator perpective
if we use Collection or List remove() method during iteration then your code will throw ConcurrentModificationException 
what is the difference between synchrinized collection and Concurrent Collection in java collection java added many concurrent classes concurrentHashMap ,CopyOnWriteArrayList,BlockingQueue,etc. 
concurrent collection has the better performance than synchronized collection  becuase they lock omly portion of Map to achieve concurrency and synchronization Iterator is more safe than Enumeration and does not allow another thread to modify the collection Object during the iteration  except remove() method and throws ConcurrentModificationException 
HashSet is build on the Top of HashMap 
if  we look the java.util.HashSet then we find that it uses a HashMap with same values for all keys 
private transient HashMap map;
private static fianal Object present-new Object();
public boolean add(E e)
{
 return map.put(e,present)==null;
}
if you using any custom Object in Map as key you need to override the equals() ans hashCode() method  and make sure that they follow their contract on the other hand if you are storing a custom Object in sorted Collection 
concurrentHashMap is mor Suitable for situation where you have multiple readers ane one writer Map is locked during the write operation  if you have the equal number of reader and writer than ConcurrentHashMap will perform in the line of HashTable or synchronized HahsMap 
Sorting is implemented usring Comparable and Comparator in java when we call the Collections.sort() it gets sorted based on the natural ordering in compareTo() method while Collections.sort(Comparator) will sort Objects Based on somapre() method of Comparator.
Enumeration is an interface is containing the methods for accessing the data structure from which the data is obtain it allows the sequential access to all the elements stored in the collection .
what is the difference between Enumeration and Iterator ?
Enumeration acts as a Read only interface .bacause it has the method only to traverse and fetch the Objects 
whenever there is a possibility that multiple threads accessing the same instance then we have to use vector .non synnchronize data structure gives the better performance than the synchronize one .
>what is the importance of the hashCode() and equals() methods? how they are used in java ?
java.lang.Object has two methods define in it 
public boolean equals(Object o)
public int hashCode().
these  two methods are heavily used when Object stored in collections.
whenever hashCode() method is invoked on the same Object more than once  in a application it will give the same integer value 
if two Objects are equals according to equals method then calling the hashCode() method on two Object is will give the same integer value ot hashCode vlaue .producing the distinct integer result for unequal Objects may improve the performance of hashtable .
equals method 
reflexive symmetric  and transistive
Sets use equals() to enforce non duplicates and HashSet uses hashCode() as a first-cut test for  equality. Technically hashCode() is not necessary then since equals() will always be used in the end ,but providing a meaningfull hashCode() will improve performance for very large sets or Objects thst take a long or Objects 
>what is the difference between Sorting performance of Arrays.sort() Collections.sort() both have the same algorithm the  only difference between is type of input to them.Collections.sort() has the input List so it does a translation  of Lost to array and vice versa which is an additional step while sorting.
>what is BlockingQueue and how it can be used ?
bloclingQueue waiting for a queue to become non empty when retrieving an element and wait for space 
>which implementation of the list interface provides for the fastest insertion of a new element into the middle of the list
ArrayList and vector both uses the array to store the elements of the list
the LinkedList uses the doubly Linked List to store the elements 
an insertion requires only the updating of the links at the point of insertion  therefore the linkedList allows  for fast insertions and deletions.
>what is the difference between ArrayList and LinkedList ?
LinkedList  is made up of a chain of nodes .each node stores an element and pointer to the next node .
Arraylist is much faster than the LinkedList for random access,
System.arrayCopy() where as LinkedList are faster for inserts and deletes anywhere in the list.
an instance of Hashtable has two parameters that effects the performance 
:initial capacity and load factor the capacity is the number of buckets in the hash table and the initial capacity is simply the capacity at the time hash table is created .a single bucket can store the multiple entries which must be searched sequentially .the load factor is a measure of how full the hash table is allowed to get before its capacity is automatically increased 	
HashMap 
this implementation provides constant-time Big O Notation O(1) performance   for the basic operations to get the iteration performance then not set the initial capacity too high or the load factor too low if iteration performance is important.
TreeMap implementation provides guaranteed log(n) Big O Notation  time cost for the containsKey get key ,put and remove operations 
HashSet class offers constant-tine O(1) performance for the basic operations(add,remove,contains and size)assuming the hash function disperse  
LinkedList 
Performance of get and remove methods is linear time Big O Notation  O(n)
and Iterator.remove methods is constant-time 
the initial size of arrayList is empty get set iterator and listIterator operations run in constant time but it  worst  case since array must be resized and copied  adding n elements requires linear time 
java collection FrameWork is pivotal in developing high performance reusable  and reliable java application designed by joshua j.Blch in early 2000s
what is java Collection FrameWork and what is the use of java collection framework ?
java collection FrameWork represents the set of classess and interfaces which provides an efficient way to store and handle data in a java application .it includes several classes that supports operations like searching sorting insertion manipulation and deletion .

java programming language is the brain child of james gosling who designed it  in early 1995.

what are the Main Benefits of java  Collections Framework ?
performance
reusability
maintainability
Extensibility
>what is the difference between Collection and Collections Framework ?
collection is an Object container that can hold multiple elements and functions as a single unit .
collection framework provides a centelized system for managing and representing collections.
iterable interface is a part of the <java.lang>
also the oracle java collection documentation states that collection interface is a member of the java Collection framework which belongs to the java.util package.
map is the two dimensional data structure which stores data in the form of key-value pair. the map is essentially a set and cant have duplicate elements  Iterator is an interface .you can locate in the java.util package 
to use an Object as the key in HashMap we can implement equals() and hashCode(0 methods.
Collection.reverse(ListObject)

List<String> arrayList=new ArrayLIst<String>();
arrayList.add("how are you");

String[] strarr=arrayList.toArray(new String[arrayList.size()]);
we will wish you to that the abve questions will help you for the preparation  of the java interview questions.
>why Map interface does not extends Collection  interface ?
set is unorderd collection and does not allows duplicate elements 
list is ordered collection and allows duplicate elements 
where Map is a key pair  and it is viewed as set of keys and collection of vlaues .Map is a collection of key value pairs so by design they separated from collection interface 
Iterator type  in Hashtable is a fail safe where is in HashMap it is fail-fast and HashMap is fast in performance as compared to Hashtable .Superclass is a Abstract class 
>what is the difference between Comparable and Comparator ?
Comparable interface is from java.lang package and it has the method compareTo(Object obj) to sort the elements 
where as the Comparator interface is from java.util package and it has the  method compare(Object obj1,Object obj2)
>How can we sort a list  of Objects ?
there are two methods by which we can sort the elements of the  list Object .
to sort the array of object we will use Arrays.sort() method.
and if we  need to sort the collection Object we will use Collections.sort()
>what is the difference between fail fast and fail safe ?
fail fast is nothing but the immediate report of any failure .whenever problem occurs in the  fail fast system then the system is fail .
in java when we iterate collection Object using the Iterator some times there  is an exception in throw by the system ConcurrentModificationException 
there are two reason for this exception
if one thread is iterating the a collection  and another thread is trying to modify the collection then Exception is thrown by the system 
and after the  remove method call if we try to modify collection Object.
>what is the difference between  Iterator,ListIterator  and Enumeration 
Enumeration is a legacy interface.and it uses the elements method 
Iterator is implemented on all java collection  classes.
Iterator uses iterator() method 
Iterator can traverse  in forward direction only.
ListIterator is implemented only for List type classes
ListIterator uses listIterator() method 

>how to make a collection thread safe
vector,hashtable,properties and stack are synchronized  classess , so they are thread safe and can be used in multi-threaded environment.
by using the Collections.synchronizedList() we can make list classess thread safe.
by using java.util.synchronizedset() we can make set classess thred safe
>which design pattern Iterator follows ?
Iterator design pattern
>which data structure HashSet implements 
Hashset implements hashmap internally.
>why does not collection extend cloneable and serializable ?
equals and hashCode  methods are define in the Object class 
>what is the difference between array and arrayList ?
array is a collection of similar data type and fixed size
where as the ArrayList is a collection of homogeneous and heterogeneous elements .
>what is the proprties class?
properties class are the subclass of Hashtable . it is used to maintain list of values in which the  key and the  values is String
>how to convert a String array to arrayList ?
ArrayList al=new ArrayList(ArrayList(new String[]{"",""}))
or arrayList.toArray();
what are the difference between Comparable and Comparator in java Collection 
one of the common interview question asked in the iterview that what is the difference between comparator and comparable interface
Comparable interface is used for the natural sorting there is a reason all wrapper classes and String class implementing this comparator and override compareTo(Object o) method.
Wrapper classes :
wrapper  classes is used to convert primitive data into java for java has  8 primitive data type.
package java.lang;
public final class Integer extends Number implements Comparable<Integer>
>what is the difference  between Enumeration and Iteration
Enumeration is a legacy interface,it uses elements() method,it can traverse in forward direction only,it have a methods  like hasMoreElement() and nextElement()
where as Iterator is implemented on all java collection classes
Iterator uses iterator() method 
it can traverse in forward direction only
it has the methods like hasNext(), next(),remove().
if(!treeMap.isEmpty())
ListIterator is implemented only for List type classes.
it uses listiterator() method
listIterator can traverse in forward and backward directions
it has methods like
hasNext()
Stream is a sequence of data in java Stream is composed of bytes it is called  a stream because it is like a stream of water  that contini=ue to flow
OutputStream and InputStream 
java application uses the OutputStream to write data to a destination it may be a file an array peripheral device like socket 
public void write(int)throws IOException it is used to write a byte to the current output stream 
public void flush() throws IOException
public void close() throws IOException
FileOutputStream 
java Console class is used to get input from console it provides methods to read texts and passwords.
Console c=System.console();
String n=c.readLine();
Writer is an abstract class for writing to character Streams.
Writer w=new FileWriter("");
String content="";
w.write();
w.close();
java Reader class is an abstract class for  reading character streams the only methods that a subclass must be implemented are read()
java BufferedReader class is used to read the text from a character based input stream
java printStream class is used to write data to a multiple stream 
pushbackInputStream class overrides inputstream and provides extra functionality to another input Stream it can unread  a byte which is already read and push back one byte.
pushbackReader class is a character stream reader it is used to pushes back 
java StringWriter class is a character stream that collects output from String buffer which can be used to construct a String the java StringWriter class inherits  the writer class.
java io interview Questions and answers
>what is IO stream?
it is a stream of data that flows from source to destination good example is copying the file two streams are involved input stream and outputstream 
>what is the necessity of two types of streams byte Streams and character Streams
ans:byte streams were introduce with jdk 1.0 and operate on the file containing ASCII characters.we know java supports other language characters also known as Unicode characters to read the files containing Unicode characters designer introduced character streams with JDK 1.1  as ASCII is a subset of unicode for the files of English characters we can go with either  byte streams or character streams
ASCII is a subset of Unicode for the files 
>what are the super most classes of all streams ?
all the  byte stream classes can be divide into two categories input stream and output stream  and all the character stream classes divided into two  part reader classes and writer classes there are four abstract  classes from which all these streams are divided
super most class of all byte stream classes is java.io.InputStream and all output stream classes java.io.OutputStream 
for reader classes java.io.Reader and java.io.Writer
>what is FileInputStream and FileOutputStream 
ans:these classes used by the  programmer very often to copy file to file .these classes work well with files containing less data of a few thousand bytes as by performance these are very poor.for larger data  prefered BufferedInputStream or BufferedReader and BufferedOutputStream BufferedWriter
it is better to use BufferReader in place of BufferedInputStreams and DataInputStream
>what is System.out.println() ?
println() is a method of PrintStream class out is a static object of printStream class .defined in System class System is a class define in java.lang package used to interact with  the underlying operating system by the programmer.
>what are the filter streams ?
Filter streams are a category of IO stream whose  responsibility is to add extra functionality to  the existing streams like giving line numbers in the destination file that do not exist int the  source file or increasing performance of copying etc.
>name the  filter streams availavble ?
there are four filter streams in java.io package two in byte streams side and  two in character streams side 
FilterInputStream
FilterOutputStream
FilterReader
FilterWriter
there are the abstract calsses and we can not create Object of these classes.
>name  the filter stream classes on reading side of byte stream ?
there  are  four classes 1>LineNumberInputStream(it adda line numberin the destination file)
DataInputStream contains special methods like readInt(),readDouble() readLine()
3>BufferedInputStream gives bufferung effect that increases the performance to the peak and PushbackInputStream pushes the required character back to the  system .
>what is the functionality of SequenceInputStream ?
>what is the functionality of SequenceInputStream ?
it is used to read data from multiple files and write into  a single file.
>what is PrintStream and PrintWriter ?
in functionality both  are same but belongs to different categories byte stream and character stream println method exist in both classes
>which streams are advised to use have maximum performance in file copying ?
BufferedInputStream  and BufferedOutputStream on byte stream side and BuffereReader and BufferedWriter on character streams side.
>what are piped streams ?
there are four piped streams pipedInputStream ,PipedOutputStream,PipedReader  and PipedWriter these streams are useful to pass data between  two running threads say process.
>what is File class?
it is a non-stream (not use for operation ) class used to know the properties of a file like when it  was created has read and write permission size etc
>what is randomAccessFile ?
it ia a special class from java.io package which is neither  a input stream nor outputstream becuase it can do both it is directly a subclass of Object class all the methods of DataInputStream and DataOutputStream exist in RandomAccessFile.
>what is the difference between System.out, System.in,System.err?
System.out and System.err both represent the monitor by default and hence can  be used to send data or result to the monitor.but System.out is used to display normal message and result where as System.err is used to display error meesage and System.in represents InputStream Object 
>what are the  purpose of the System class ?
The  purpose of the System class is to  provide access to system resources.
>what is the abstract parent class of FileWriter ?
OutputStreamWriter
>which class is used to read streams of characters from file?
FileReader 
>which class is used to read streams of raw  bytes from a file ?
FileInputStream
>which is the parent class of FileInputStream ?
InputStream 
FileNotFoundException
NotSerializableException
>what do we understand by fair locks ?
java.util.concurrent.locks.ReentrantLock
in java there is a two type of lock is availble 
intrinsic lock and Explicit lock 
whenever we synchronized any object we get an Intrinsic lock on that Object.
there is also one way to implement using Explicit locks 
java.util.concurrent.locks package provides some explicit locking classes which can be used to replace the intrinsic locks one of commonly used example of explicit lock is ReentrantLock
there is more reason that to use tryLock() method which helps to prevent the deadlock scenario I will 
problem is that in case of multiple threads asking fore a shared lock ,we want to ensure that the thread get the lock the longest thread in waithing on  the lock Object.
java thread fair  lock and unfair lock detail
there are two kinds of synchronization fair and unfair lock 
lockInterruptibly()
wait() and notify() method is 
by acquiring the intrinsic lock  and calling the Object wait() 
>is it possible to check whether a thread holds monitor lock on some given Object ?
the class java.lang.Thread provides the static method Thread.holdsLock(Object) that returns true if and only if the current thread holds the lock on the Object given as argument to the method invocation.
>what does the method Thread.yield() do ?
an invocation of the static method Thread.yield() gives the schedular a hint that the current thread is willing to free the processor .the schedular is free to ignore this hint.
>what do you have to consider when passing Object  instances from one thread to another ?
passing the Object between threads you will pay attention that these Objects are not manipulated by two threads at the same time . an example would be a Map implementation whose key/value pairs are modified by two concurrent threads in order to avoid problems with concurrent modifications you can design an Object to be immutable.
>which rule you have to follow in order to implement an immutable class ?
to make the class immutable there are some rules that can we follow
make all the fields of the class private and final
there should not be a setter methods
the class itself declare final in order to prevent subclass to violate the principle of immutability.
if fields are not of a primitive type but reference to anothr Object
there should not be a getter method that exposes the reference directly to the caller
>what is the purpose of the class java.lang.ThreadLocal ?
As memory is shared between different threads ,ThreadLocal provides a way to store and retrieve values for each thread separately.implementation of ThreadLocal store and retrieve the values for each thread independently
>what are possible use cases for  java.lang.ThreadLocal ?
instances of ThreadLocal can be used to transport information throughout the application withiout the need to pass this  from method  to method example is  that transportation of security/login infromation within an instance of ThreadLocal such that it is accessible by each method 
>what is the meanig of scalability ?
Scalability means the ability of a program to improve the performance by adding further resources to it /
>what do you understand by lock contention ?
lock contention occurs when two or more threads are competing in the asquisition of a lock 
>which technique help to reduce lock contention ?
the scope of lock is reduced 
using hardware supported optimistic locking operations instead of synchronization
avoid synchronization where possible
avoid Object pooling
>what is Object Pooling in java ?
An Object pooling is a collection of particular Object that an Application will create and keep on hand for those situations where each instance is expensive
>explain by an example the technique lock splitting
this technique is a way to reduce the lock contention when one lock is used to synchronize access
>how can we access the thread pool that is used by parallel stream operations ?
ForkJoinPool.commonPool()
>is it possible to perform stream opetation in java 8 with a thread pool ?
collections provide the method parallelStream() to create a stream that is processed by a thread pool.also we can use the paraller() method to convert the sequential stream to parallel stream .
>what is the difference between the two classes RecursiveTask and RecursiveAction ?
>what do you understand by a CAS operation ?
CAS stands for compare-and-swap and means that the processor provides a separate instruction that updates the value of a register only if the provided value is equal to the current value
>what is the difference between two interfaces Executor and ExecutorService ?
The interface Executor only defines one method execute(Runnable) implementation of this interface will have to excute the given Runnable instance at some time in the future.The ExecutorService interface is an extension of the Executor interface and provides additional methods to shut down the underlying implementation to await the termination of all submitted tasks and it allows submitting instances of callable.
>what happens when you submit() a new task to an ExecutorService instance whose queue is already full ?
>what is ScheduledExecutorService ?
The interface ScheduledExecutorService extends the interface ExecutorService ans adds method that allow to submit new tasks to the underlying implementation that should be executed a given poiny in time there are two methods to schedule one shot tasks
>what is the difference between the two interfaces Runnable and Callble ?
The interface Runnable defines the method run() without any return value where as the interface callble allows the method call() to return a value and to throw an exception.
>what is the difference between HashMap and Hashtable with regards to thread-safety ?
>is there a simple way to create a synchronize instance of an arbitary implemntation of collection 
yes there is a method that converts the collection .list or Map
into the synchronize instance Collections.synchronizedCollection(Collection)
<what is semaphore ?
semaphore is a data Structure that is used to control how many thread can access a critical section or  resource simultaneously .hence java.util.concurrent.semaphore takes the first parameter the number of permits the threads compete about 
//semaphore has two methods take and release methods acquire and release methods
>what is synchronization in respect to multi-threading  in java ?
with respect to multi threading synchronization is the capability to control the access of multiple threads to shared resources
//Runnable is more advantageous when you are going for multiple inheritance.
//what is native  method in java ? the method is implemneted in native code that is code that does not run in the jvm it is typically  writtern in c or c++ .native methods are  usually used to interface with system  call or libraries writtrn in other programming languages.
>what is the difference between Thread.start() and Thread.run() methods ?
>what is TheadLocal class ?
A thread local variables effectively provides a separate copy of its value for each thread that uses it.Thread Local instances are typically private static fields in classes that wish to associate state with a thread.
>what is InvalidMonitorStateException is thrown ? why ?
this exception is thrown when you try to call wait notify notifyAll any of these methods for an Object from a point in your program where you have not a  lock on that Object this exception is a sublclass RuntimeException so we r not 
next()
previous()
hasPrevious()
remove()
nextIndex()
previousIndex()
>what is the difference between ArrayList and LinkedList in java collection 
frequent insertion and removal of Objects in ArrayList is slower based on the index because elements have to be shifted in the array 
where as in the LinkedList Frequent insertion and removal of elements is faster  this is because removal only requires change in the pointer location in the two neighbor nodes which is going to be removed.
search operation is fast in the ArrayList bcz it maintains the index based system for its elements
>what do you mean by fail-fast and  fail-safe property ?
fail fast  property checks for  any modification in the structure of the  underlying collection every time we try to get the next element if collection  is structurally modified at any time after the iterator is created
what to do you need to do yo use a custom Object as a key in Collection 
reduces the programming efforts due to use code
increased performance because of high-performance implementation 
?How hashtable works in java ?
Hashtable uses HashMap to store the elements 
private  transient HashMap<E,object> map;
private static final Object present=new Object();
public boolean add(E e)
{
 return map.put(e,present)==null;
}
>what is identityHashMap and WeakHashMap
identityHashMap is same as HashMap
 except it uses the refrence equality  when comparing the elements 
WeakHashMap is an implementation of the Map interfsce that stores only weak references to its keys 
>how to design a good key for HahsMap
ClassCastException 
LinkedList allows fot constant time insertions or removals 
>how to make the Collection read only
Collections.unmodifiableCollection()
Collections.synchronized()
>how to avoid the ConcurrentModificationException while iterating a collection
ConcurrentHashMap and CopyOnWriteArrayList
you can convert the list to an array and then iterate on the array
you can lock the list while iterating by putting it in a synchronized block
>what is unsupportedOperationException ?
this exception is thrown on invoked methods which are not supported by actual collection type.
Collections.unmodifiableList() then call add() method or remove method 
>which collection classes provides random acces of its elements?
ArrayList,HashMap,TreeMap,HashTable classes provide random access to
> Java IO   java  input output Stream 
it is used to process the input and produce the output
java uses the concept of stream to make IO operation fast.java io package contains all the classes required for input and output operations .
we can perform file hadling  in java using java I/O API
OutputStream 
FileOutputStream ByteArrayOutPutStream FilterOutputStream PipedOutPutStream ObjectOutPutStream 

DataOutputStream  BufferedOutPutStream PrintStream 
sequenceInputStream
charArrayReader
charArrayWriter
console
FilePermission
pushbackInputStream
pushbackreader
StringWriter
StringReader
sequenceInputStream
console
FilePermission
PushBackInputStream
PushBackReader
StringWriter
StringReader
java Serialization and transient keyword
FileReader 
FileWriter
BufferedReader
BufferedWriter
charArrayReader
CharArrayWriter
CharArrayReader 
CharArrayWriter
what is transient keyword in java jaca io framework
Stream is a sequence of data .in java stream is composed of bytes .it is called a stream because it is like a stream of water that continues to flow
System.out it is a standard output stream 
System.in  it is a standard input stream 
System.err it is a standard error stream
BufferedOutPutStream class is used for buffering an output stream .it internally uses buffer to store the data . it add more efficiency than to write data directly into stream so it makes the performance fast.
OutputStream=new BufferedOutputStream(new FileInputStream());
BuffereInputStream class is used to read information from stream .it internally uses buffer mechanism to make the performance fast.
when a BufferedInputStream is created an internal buffer array is created
methods of BufferedInputStream class
int available()
int read()
int read(byte[] b,int off,int ln)
void close()
void reset() 
void mark()	
SequenceInputStream class is used to read data from multiple Streams sequentially(one by one)
java  ByteArrayOutputStream class 
this  class is used to write common data into multiple files.in this stream  data is written into a byte array which can be written to multiple Streams later
ByteArrayOutputStream class holds a copy of data and  forwards it to multiple  Streams this class automatically grows according to data 
ByteArrayInputStream is used to read byte array as input stream 
DataOutputStream class allows  an application to write java data types to the outputStream in a machine independent way.
DataInputStream class is allows an application  to read primitive data  from input Stream in a machine-independent way.
java FilterOutputStream class
this class implements the OutputStream class and it provides the different sub classes such as BufferedOutputStream and DataOutputStream to provide additional functionality so it is less used individually
>what are Byte Streams in java programming language ?
byte streams handle I/O of raw binary data.byte streams represents low level io which which are used for primitive I/O operations
byte stream handle the io of raw binary data  byte streams represents low level  I/O which usually used for primitive I/O  
all byte stream classes in java programming language extend from inputStream and OutputStream . some of the classes provided in java programming  language that are based on byte stream are FileInputStream and FileInputStream  and ByteOutputStream
StringBufferInputStream and StringBufferOutputStream which perform byte I/O operations on String ObjectInputStream and ObjectOutputStream which perform byte I/O operations on Objects.
>what are character streams in java programming language ?
Character streams handle the I/O operations of character data  sets .
all the character stream classes in java programming language implements from Reader and writer interfaces. some of the classes provided in java programming language  that are based on character streams are/ InputStreamReader and OutputStreamwriter which are byte to character bridge.
charArrayReader and CharArrayWriter whhich perform byte I/O operations on a char arrays 
StringReader and StringWriter which perform character  O/O operations on Strings.FileReader and FileWriter which perform  byte I/O operations on character files.
>what are Buffered streams in java programming language ?
Buffered stream provide buffered functionality to unbuffered  streams by wrapping them .
this is perform I/O operations on buffers and call native OS API when buffer is empty java io follows  decorator pattern by enabling wrapping of one stream with another .unbuffered stream is wrapped  with a buffered  stream to provide buffered I/O operations.java programming language provides  BufferedInputStream and BufferedOutputStream classes that wrap byte streams and  BufferedReader and Bufferedriter classes that wrap character streams.
>what are DataStreas in java programming language 
DataStream Provid binary operations on primitive data
>what are Object streams in java programming language ?
Object stream provide I/O operations on objects .Objects  have to be serializable in order for object streams to operate on them  all object streams implements either ObjectInputStream interface or ObjectOutput interface.
java programming language provides two classes ObjectInputStream and ObjectOutputStream that provide object stream functionality.
>what are scanner  in java programming language ?
java programming language provides the Scanner class that enables splitting  of String and primitive data into separate tokens ,based on a delimiter that can be a regular expression.
Scanner breaks its input into tokens using a delimiter pattern  which is by default matches  whitespace .
Scanner class splits its input into tokens using delimiter pattern  which by default matches whitespaces.
A Scanning operation may block waiting for input
A Scanner is not safe for multhreaded use without external synchronization 
java.util.Scanner  class 
public final class Scanner extends Object implements Iterator<String>
java.io package interview Questions .this package   contains all the required classes and interfaces 
java io provides to process the input and produce the output by using the java io package  
>how to create file and directory programmatically ?
we can create file by using createNewFile() method and mkdir() methods is to create directory 
File f=new File("abc.txt");
f.createNewFile();

f.mkdir();
>what are the FileReader and BufferReader ?
we have 2 ways to read data from the file
FileReader and BufferedReader 
by using FileReader we can read data from the file .fileReader contain read() and read(char[] ch) methods to read the  data char by char from  the  file.
BufferedReader:BufferedReader read  the file line by line and it can communicate directly  with the file ,it can communicate  with some reader Object.it is the most enhance reader.
BufferedReader contain the read(), read(char[] ch),close() and readLine() methods
>what are the  FileWriter,BufferedWriter and PrintWriter ?
there are three ways to write  character data into a file 
FileWriter BufferedWrirer and PrintWriter methods
FileWriter:if the  specified file is not already available then  this constructor will create that file
write(int ch) to write single character
write(char[] ch) to write characters 
write(String s)to write String
flush(): guarantee that total dara should be writtern peoperly to the file including last character
close():to close the String 
delete():to delete file or directory
BufferedWriter:to overcome  FileWriter problem we use BufferedWriter to write text data in to the file in this we have one extra  method newLine() to insert a newline BufferedWriter cant communicate directly with the file in this approach we should take newLine() method for  every line so length of the code will be increased.
PrintWriter: to overcome  the  BufferedWriter problem we use PrintWriter to write any type of data into the file.it is a most enhance writer if file not available then we first create the file and then write data into file 
there is some extra methods print(char ch) print(int i) print(double d)
print(String s)
print(Boolean b)
>what are the most enhanced writer and  Reader ?
The most enhance writer is PrintWriter and the most reader  is BufferedReader
>what is the purpose of flush() method ?
this method is to guaranty that total data should be written properly to the file incliding last character.
what is the difference between write(100) and print(100) of PrintWriter class?
in the case of writer(100) the corresponding characters 'd' will be written in to the file where as print(100) it written int value 100.
>what is the difference between Reader Writer and input output streams ?
generally we use Reader and Writer to handle data where as we can use input output Streams to handle binary data like images videos file audio etc
we use FileOutputStream to write binary data to the file where as we use FileInputStream to read binary data from the file  
>what is the  serialization ?
Serialization is the interface in java.io package ,serialization is used to convert an Object from java form to file supported form or network supported form FileOutputStream and ObjectOutputStream classes are implementing Serialization 
>what is Deserialization ?
Deserialization is interface in java.io package it is the process of convertig an Object from  file Supported form or network to java form 
FileInputStream and ObjectInputStream classes are implementing Deserialization
>what is the Externalization ?
in serialization ,jvm is performs the all the activities in this case programmer does not have any control  .in this process all the  Objects are save in the file which is creates the performance problem to overcome there problem these problem by using Externalization all the activities perform by programmer.
>what is the use of SerialVersionUID ?
when serialization sender side JVM will generate a unique id based on the .class file and at the time deserialization reciever side jvm will compare that unique id with local class unique id .if both ID's match then deserialization will perform that unique id is SerialVersionUID.	
the  stream in the java io package supports many data such as primitives1 Object localized characters etc
>how can you write text to a file ?
FileWriter fw=new FileWriter(filename);
PrintWriter pw=new PrintWriter(fw);
pw.print("");
pw.close();
>what is NTFS and FAT/FAT32 .
file.canExecute();
file.canWrite();
file.canRead();

Set the file permission

file.setExecutable(boolean);
file.setReadable(boolean);
file.setWritable(boolean);
>what is FileInputStream and FileOutputStream in java ?
A FileOutputStream is an output stream  for writing data to a file.
if you have to write primitive values then use FileOutputStream instead for character-oriented data prefer FileWriter but you can write byte-oriented as well character-oriented data .
>what is FileInputStream class ?
A FileInputStream class Obtains input bytes from a file .it is used for reading streams of raw bytes such as image data for reading streams of characters consider using FileReader.
>how many ways can we read data from the keyboard ?
There are many ways to read data from the keyboard 
InputStreamReader class
BufferedReader class
Console class
Scanner class
InputStreamReader and BufferedReader class
BufferedReader class can be used to read data line by line by readLine() method
the Console class can be used to get input from the keyboard 
there are various ways to read input from the keyboard the java.util.Scanner class is one of them . The Scanner class breaks the input into  tokens using the delimiter which is whitespace by default. it provides many methods to read and parse various primitive values.
InputStreamReader isr=new  InputStreamReader(System.in);
BufferedReader br=new BufferedReader(isr);
System.out.println("Enter your name");
String s=br.readLine();
System.out.println("Welcome "+name);
}
}
using the console class

import java.io.*;
class Consoletest
{
 public static void main(String[]  args)
{
 Console c=System.console();
System.out.println("what is your name ");
String s=c.readLine();
System.out.println("welcome "+s+"to java");
}
}
>how can you read the input from the keyboard ?
import java.io.*;
public class ScannerTest
{
 public static void main(String[] args)
{
 Scanner sc=new Scanner(System.in);
 System.out.println("what is your roll n.o");
 int num=sc.nextInt();
 System.out.println("what is your name");
String sname=sc.next();
System.out.println("your roll number is :"+num+"and your   name is "+snme);
>how to delete temporary file in java ?
Temporary file is used to store the less important and temporary data. which sholud always be deleted when your system is terminated . the best practise is use the file File.deleteOnExit() to do it.
File temp=File.createTempFile("abc",".tmp");
 temp.deleteOnExit();
>how to create a temporary file in java ?
creating a temporary file in java is straightforward . there are two static methods names createTempFile in java File class one that takes two arguments and another that takes three arguments i created the test class shown below to demonstrate how to create a java temporary file

import java.io.*;
public class  javatemp
{
 public static void mainY(String[] args)throwa IOException
{
 String prefix="abc";
 String suffix=".tmp";

 File tempFile=File.createTempFile(prefix,suffix);
System.out.format("Canonical filename "+tempFile.getCanonicalFile())
}
}
>how to get list of all files from a folder in java ?
import java.io*;
 public class  FileList
{
 public static void main(String[]  args)
{
 String path="c\javatest\abc.txt";
 String files;

 File file=new File(path);
 File[] f=file.listFiles();
 for(int i=0; i<f.length;i++)
{
 if(f[i].isFile())
{
 files=f[i].getName();
System.out.println(files);
}}
>How to Filter  the  files by file extensions and show the file names in java 
in this example shows how to get specific files from a folder sometimes we need to pic only specific extensions from  the given folder 
FileNameFilter()
>how compressed and uncompressed the data of a file in java ?
GZIPOutputStream go
import java.util.zip.GZIPOutputStream;
>how to create and store property file dynamically in java ?
we can also create the property files dynamically first create the properties  Object add all property  key value pair by using setProperty() method then write this file to FileOutputStream Object to store is as a property file
java.util.Properties;
>how to store and read Objects  fron a file in java ?
basically to read Objects from a file one should follow these steps :
open FileInputStream to the file that you  have stored the Object to
open ObjectInputStream to the above FileInputStream 
use readObject method of ObjectInputStream class to read the Object from the file
the Above  method returns an Object of type Object so you have to cast it to the original type to use it properly
private static final long serialVersionUID=1L;
private String first_name;
private String last_name;
private int age;

@override
return new StringBuffer("First Name").append(this.first_name).append(",Last Name:").append(this.last_name).append(",Age:").append(this.age).toString();
>what is the difference between io and nio in java 
IO is a stream oriented where as NIO is Buffer oriented 
IO is a Blocking  IO and NIO is a non blocj=king  io selectors
IO is a stream oriented where as NIO is a Buffer Oriented 
java io is ste
>what is a transient  variable in java ?
in java a transient variable is a variable whose value is  not saved  to a stream during serialization.
>what is thread ?
A thread in context of java is the path followed when  executing a programme.
all tha programmes have at least one thread known as main thread which is created by the jvm at the programme  starts.
when the main method is invoked with the main thread 
creating the thread is accompolished by implementing the interface or extending the class every threas is created and handled by java.lang.Thread class .when a thread is created it is assigned a priority .the thread with higher priority is executed first followed by lower priority threads 
jvm stops executing threads under either of the following conditions 
if the exit method has been invoked and authorized by the security manager
and  if all the daemon threads of the progrm have been died.
>what is the difference between microprocessor and microcontroller ?
microprocessor is an IC which has only the cpu inside them only the processing powers such as intel pentium 1,2,3,4 core 2 duo i3,i5,etc
these microprocessor dont have RAM,ROM and other peripheral on the chip
in the  microcontrollers there is a CPU in addition with fixed amount of RAM,ROM and other peripherals all embedded on a single chip.it is also called as a mini computer on a single chip today different manufacturers produce microcontrollers with a wide range of features available in  different versions 
the clock speed of the Microprocessor is quite high as compared to the microntroller where as microcontrollers operate from a  few MHz to 30 
microprocessor can not be used stand alone  they need other peripherals like ROM RAM buffer io ports  etc and hence a system designed around a microprocessor is quite costly
microcontroller can called as heart of the embeded systems and major microcontroller manufacturer companies are making them to be used in embedded market.
Microprocessor has only a CPU inside them in one or few integrated circuits like microcontrollers it does not have RAM ROM and other peripherals they are  dependent on external circuits of peripherals to work but 
von Neumon model where program memory and data memory are separated  
Harvard architecture where programme memory and data are stored in same memory module
Thread is  a light weight,sub-process,smallest unit of processing.
multiprocessing and multitasking both are used to achieve multitasking
>what is the difference between Multi-threading and Multi-processing
Multithreading refers to an application with multiple threads running within  a process.while multi processing refers to an application organised across multiple OS level process A thread is a stream of instructions within a process Each thread has its own instruction pointer set of registers and stack memory.
threads are share common memory area they dont allocate separate memory area so saves memoy and context-switching between the  threads takes less time than process.multithreading mostly used in games animation etc.
>what is multitasking ?
multitasking is a process of executing multiple task simultaneously we use multitasking can be achieves by two ways.
>what is the disadvantage of process based multitasking ?
each process have its own address in memory i.e each process allocates separate memory area.
there will be a multipile process inside a OS and one process can have mukltiple threads.
>Thread life cycle
New
Runnable
Running
Non-Running
Dead

New:When we create a new Thread Object using new Operator then the thread is in new Thread .At this point thread is not alive and its 	
Runnable: when we call the Start() function on Thread Object it is changed to Runnable and control given to Thread schedular to finish execution Thread Schedular picks one thread from the runnable thread pool and change it's state to Running 
>what is the join() method ?
the join method is used to hold the execution of currently running thread until the specified thread is dead (finished execution)
there are two ways to create  the threads 
by extending the Thread class
by implementing the Runnable interface 
>Thread Schedular in java ?
Thread in java is a part of the JVM that decides which thread should run().
there is no guarantee that which runnable thread will be chosen to run by the thread schedular.
only on thread can run at a time in a single threaded process.
Thread Schedular mainly uses preemptive or time slicing to schedule the threads.
>what is preemptive scheduling in java ?
under preemptive scheduling the highest priority task execute until it enters the waiting states or higher priority task comes into existence.
sleep() method in java 
public static void sleep(long milliseconds) throws InterruptedException
public static void sleep(long milliseconds,int nanos) throws InterruptedException

we can not start a thread twice if we try to start a thread twice it will throw a IllegalThreadStateException is thrown 
>what will hapeen if we call the run() method directly instead start() method 
each thread starts  in a separate call stack 
calling the run method directly from main method the run() method goes onto the current call stack rather than at the beginning of a new call stack
>what is the join method ?
join method waits for a thread to die in other words it causes the currently running threads to stop executing  until the thread it joins with completes its task.
>what  is the Daemon thread in java ? 
Daemon thread is a thread which provides the service to the user thread and it's life depends on the user thread that means when all the user  threads dies jvm terminates this thread automatically/
there are many threads running in jvm automatically like gc,finalizer etc.
java.lang.Thread class provides two methods  for java daemon thread
public void setDaemon(boolean status)
public boolean isDaemon()
java.lang.IllegalStateException
>what is thread pool in java ?
java thread pool represents a group of worker threads that are waiting for the job and reuse many times
Ram temporary saves the data 
PROM: programmable read only memory.
EPROM: erasable and programmable read only memory 
EEPROM : Electrically Erasable and programming Read only memory
java Thread Pool saves time because there is no need to create a new thread 
thread pool is used in servlet and jsp where container creates a thread pool to process the request.
import java.util.concurrent.*;
ExecutorService ex=Executors.newFixedThreadPool(5);
for(int i=0;i<10;i++)
{
 Runnable worker=new WorkerThread(""+i);
 ex.execute(worker);
}
 ex.shutdown();
while(!ec.isTerminated())
{
 System.out.println("finished all threads");
Thread Group in java
java provides a convinient way to group multiple threads in a single Object
there is a difference between thread group and thread pool 
in thread pool we use the java.util.concurrent.Executors
and java.util.concurrent.ExecutorService
java provides a method to group multiple threads in a single Object in such a way that we can suspend ,resume or interrupt group of threads by a single method call
ThreadGroup(String name) creates the thread group with given name
ThreadGroup(ThreadGroup parent,String name) creates the thread group with given parent group and name.
there are many important methods in a threadgroup class 
int activeCount() returns the number of threads running in current group 
int activeGroupCount() returns the number of active group in this thread group.
void destroy() destroys this thread group and all its sub groups
String getName() returns the name of this group 
ThreadGroup getParent() returns the parent of this  group 
void interrupt() interrupts the all threads of this group
void list() 
>what is Shutdown Hook ?
ShutDown can be used to perform cleanup resources or save the state when jvm shuts down abnormally or cbruptly.performing clean resources means closing the log file sending some alerts  or something 
when user  ctrl+c on the command prompt
System.exit(int) method is invoked 
user logoff 
user shutdownaddD
addShutdownHook(Thread hook) method 
addShutdownHook() method of Runtime class is used to register the thread  with the virtual machine 
public void addShutdownHook(Thread hook)
{
}
the Object of runtime class can be Obtained by calling the static factory method getRuntime()
Runtime r=Runtime.getRuntime();
the shutdown sequence can be stopped by invoking the halt(int) method of runtime class.
>difference between normal class and Anonymous class;
A normal class can implement any number of interface but Anonymous calss can implement only one interface at a time
A regular class can extend a class and implements any number of interface simultaneously but anonymous inner class can extend a class or can implement an interface but not both at a time.
for a regular class we can write any number of constructors but  
finalize method is define Object class where as gc() method  is define in System and Runtime classes
process is an executing program and one or more threads run in the context of the process
process and threada both are the independent sequence of execution the main difference is that thread run in a shared memory space.while process run in a  separate memory spaces 
a thread is a subset of the process .
a process consist of multiple threads thread is a smallest  part of the process that can execute concurretly
synchronization in java is a capability to control the access  of multiple threads to any shared resource .
it is a better option where we want to allow only one thread to access the shared resource.
synchronization is used to prevent thread interface and prevents the consistency problem
there are two type of synchronization 
process synchronization and thread synchronization but will discuss only on thread synchronization 
there are two type of thread synchronization mutual exclusive and inter thread communication 
Mutual exclution means a single thread should be able to acess the shared at any given point of time . this avoids the race conditions between threads acquiring the resource .Monitors and Locks provid the functionality 
thread is a type of data which is logically part of an Object Header on the heap memory 
each object in java has a lock that any program use to coordinate multi threading access to the object lock 
if any thread want to acess the instance variable of that Object  then must own the Object lock (set some flag in memory lock memory area) then all the threads a lock is a part is a kind od data which is logically part  of an Objects header on the heap memory set the flag in lock memory area  lock memory area 
what is monitor ?
the ability to make threads wait for certain condition to be true 
multithreading  means in any single process multiple threads is allowed and again can run simultaneously,multitasking means sharing of computer resource among processes 
multitasking is allow CPU to perform multiple tasks simultaneously where as the multithreading allows multiple threads of the same process to execute simultaneously 
in multitasking system has to allocate separate memory and resources to each program that cpu is executing 
multitasking allow CPU to perform multiple task simultaneously .to perform multitasking cpu switches among these task very frequently so that user can iteract with each program simultaneously.
multithreading is different from multitasking in a sense that multitasking allows multiple tasks at the same time where as the multithreading allows multiple threads of a single task to be processed by cpu at the same time.
thread is a basic execution unit which has its own program.
multitasking  allocates separate  memory and resources for each process and programs in multithreading threads belongs to a same process shares the same memory and resources as that of the process ,
the thread which is define by extending thread class creates a unique Object and get associated with that Object on the other hand each thread define by implementing Runnable interface shares the same Object.
>what is the difference between Thread and Runnable
in thread class each thread has unique Object and get associated with it where as the in Runnable all the  threads has the same Object associated with 
as each thread creates a unique object more memory required in Runnable all the threads share the same Object less memory is used.in java multiple inheritance is not allowed hence after a class extend class it can not extend other class extending thread class introduces tight coupling as the class contains code of thread class and also the job assigned to the thread.
Thread is class in java.lang  package the thread class extends an Object class and it implements Runnable interface 
when we create a thread each thread creates a unique Objects and get associated with that Object
Runnable is an interface in java.lang package implementing Runnable  interface we can define a thread .Runnable interface has a single method run() which is implented by the class that implements Runnable interface when you choose to define thread 
process is the program execution where as thread is the part of the running process provides an enviroment.a process  can contain multiple threads 
executing a program is called process and thread is a small part of the process.every process has its separate address space all the threads of the process share the same address space coopertivley as that of a process.
context switching from one process to another procss is expensive
an executing a program itself is called a process 
process is a execution in program  or execution environment provided by the operating system  that has its own set of pruvate resources.
>in java ,what is a process and a thread ?
in java process correspond to a running java virtual machine
>how many threads does a java program hava at leasr ?
each java program is executed within the main thread hance each java application has at least one thread .
each java program executed from the main method hence at least there is only one thread in java program
>what is the purpose of the thread groups ?
each thread belongs to a group of threads JDK class java.lang.ThreadGroup provides some methods to handle a whole group of threads . with these methods  we can for interrupt all threads of a group or set their maximum priority
>what states can a thread  have and what is the meaning of each state ?
new:A thread that has not yet started is in this state.
Runnable:A thread executing in the java virtual mschine is in this state.
>how do we set the periority of a thread ?
the periority of a thread is set by using the method setPeriority(int n)
>how thread is created in java ?
java.lang.Thread class provides two way to create a thread by extending the thread class and implementing the Runnable interface
<how do we stop  a thread in java ?
to stop thread one can use a volatile reference pointing to the current thread that can be sent to null by other threads to indicate the current thread should stop its execution
>why should a thread not be stopped by calling its method stop()
a thread should not be stopped by using the deprecated methods stop() of java.lang.Thread as a call of this method causes the thread to unlock all the monitors it has acquired.
>is it possible to start a thread twice ?
no after invoking the start() method a second invocaion of start() will throw  an IllegalThreadStateExcaption
>what is daemon thread ?
A daemon thread is a servive provides thread to the user define thread.Daemon thread stops executing when all the threads of user is dead.
>is it possible to convert a normal user thread into a daemon thread after it has been started ?
it can't be possible that converting a a user thread into a daemon thread once it start.if we try to convert the user thread into a daemon thread on(True)
java volatile visibility guarantee
in multithreading application where the threads operate on non-volatile variables each thread may copy variable from memory into cpu catch while working on them for performance reasons if your computer contains more than one cpu each thread may run on a different cpu that means that each thread may copy the variables into the cpu cache of different cpus 
wait is used for inter-thread communication while sleep is used to introduce pause on execution 
wait method along with notify() and notifyAll() methods are for inter thread communication where as sleep method is used to pause the execution of current thread for specific amount of time 
calling the wait() method must hold the lock of the  Object on which it is calling wait 
>what is cpu cache memory
cache memory is also called random acess memory RAM that a computer microprocessor can access more quickly than 
the main purpose of cache memory is that to store the program instructions that are frequently 
>how can we prevent busy waiting ?
one way to prevent busy waiting is to put the current thread to sleep for a given amount of time 
Thread.sleep(long) is only indication for the schedular how long the current does not need to be executed 
InterruptedException
>how should an InterruptedException be handled ?
methods like sleep() and join() throw an InterruptedException
>what is a shutdown hook ?
a shutdown hook is a thread that gets executed when the jvm shuts down it can  be invoking addShutdownHook(Runnable) on the Runtime instance.
the intrinsic lock can be accessed by the same thread again and again
what operations are atomic in java ?
read and write operations to reference variables and primitive  variables
>what is atomic operation ?
atomic operation is an operation that is either  executed completely or not at all.
cache memory is a small and very fast temporary storage memory it used speed up the transfer of data and instruction it is located or indide a cpu chipit is faster than ram the data and instructions are retrieved from RAM when CPU uses them for the first time.a copy of data and instructions is stored in cache the next time data or instruction it first looks in cache  if the required data is found there it is retrieved from the cache memory instead of main memory the cache closet to the cpu is faster smaller and costly and stores the less data then the other level of cache.
>what do we  understand by an atomic operation ?
atomic operation is an operation that is either executed completely or not at all
>what is the difference between sleep(),suspend() and wait() method ?
Thread.sleep() takes the current thread to a "Not Runnable "state for specified amount of time 
sleep is the static method taht is used to send the calling thread into a non runnable state for the given duration of time
t.suspend method has been deprecated as it is inherntly deadlock prone
>what happens when i make a static method as synchronized?
Synchronized static methods have a lock on the class so when a thread enters a synchronized static method , the class itself gets locked by the thread monitor no other threand can enter any static 
//the lock Object is check is only for synchronized methods or blocks
>what is deadlock ?
deadlock is a condition in which one 
when two thread
>what is starvation and what is livelock ?
livelock is occur in a program execute Object.wait(0) on an Object with zero parameters
livelock occurs when all threads are blocked or unable to proceed due to unavailability of required resources 
>how to find deadlock has occured in java ? how  to detect a Deadlock in java 
java.lang.management package to diagnose and  detect  deadlocks
java.lang.management.ThreadMXBean interface  has two methods which can detect  deadlock  in java application
findMonitorDeadLockedThreads()
findDeadLockedThreads():it returns the array of thread id that are deadlocked  waiting on the monitor or 
>what is an immutable Object ? how does it help in writing a concurrent application ?
An Object is considered immutable if it's state can not change after it is created.to create an Object immutable you need to make class final and all its member final so that once Objects get created no one  can modify its state 
>what is thread dump in java ?
A thread dump is a complete list of active threads .A java thead dump is a way of finding out what each thread in the jvm is doing at a particular pints in time 	
>what is thread leak  in java ?what does it  mean in java ?
Thread leak in when an application does not release references to a thread Object properly due to this some Threads do not garbage collected and the number of unused threads grows with time application to slow  or hang
>how can i trace whether the application has a thread leak ?
give the unique and deacriptive names to the threads created in the application and add log entry in all thread at various entry  and exit points in threads.change debugging config levels and analyze log messages
>what is thread pool ?
why should we use thread pools ?
A thread pool is a collection of threads on which task can be assigned.instead of creating a new thread for each task. you can pick one thread from the pool and assigned to the task.when the Thread is finished with the task it adds itself to the pool and waits for the another assignment one of common pool is the fixed thread pool this type of pool always has a specified number of threads running 
>what is thread Scheduling and Time Slicing ?
Thread Schedular is the operating System service that allocates time to the available runnable threads.when we create and start a thread its execution depends on the implementation of thread schedular time slicing is the process to divide the available cpu time to the available runnable threads 
>what is context swithching in multi threading ?
context switching is the process of storing and restoring the cpu state so that thread execution can be resumed from the same poit at a later point of time.Context swithching is the essential feature for multitasking operating system and support for multithreaded environment.
>how does thread communicate with each other ?
when thread shares resources communication between threads is important 
>wht thread sleep and yield methods are static ?
these methods work on the currently executing thread so there is no point in invoking thede methods on some other threads that are in wait state that why these methods are
>what is volatile keyword in java ?
when we use volatile keyword  with a variable all the threads its value directly from the memory and dont cache it this make that the value read is the same as in the memory.
>what is ThreadLocal ?
it is used to create the thread local variables. we know that all threads of an object share its variables so the if the variable is not thread safe we can use synchronization but if want to 
every thread has its own threadLocal variables and they can use its get() and set() 
>what is java Timer class ?How to schedule a task torun after specific interval ?
java.util.Timer is a utility class that can be used to schedule a thread to execute a thread to be 
//java language specification guarantees that reading and writinhg a variable is an atomic operation unless the variable is of type long or double .Operations variables of type long or double are only atomic if they declared with the volatile .
>what is lock interface in java concurrency API ? what are its benefit over synchronization ?
>what is Executors Framework ?
in java frmaework Executor was introduce with java.util.concurrent.Executor interface
>what is blockingQueue ? how can we implement producer-consumer problem using Blocking Queue ?
java.util.concurrent.BlockingQueue is a Queue that supports Operationa that wait for the queue to become non-empty when retrieving and removing an element and wait wait for the space to become available in the queue when adding an element .
>what is Callable and Future ?
java introduce java.util.concurrent.Callable interface in councurrency package that is similar to Runnable interface but it can return any Objct and able to throw Exception.
Executors class provides useful methods to execute Callable in a thread pool
since callable task run in parallel 
>what id FutureTask Class ?
>what are Concurrent Collection Classes ?
java Collection classes are fail fast which means that if the collection will be changed while some thread is traversing over it using iterator the iterator.next() will throw ConucurrentModificationException 
Concurrent Collection classes support full concurrency of retrieval and adjustable 
>what is Executors class ?
Executor class provid utility methods for Executor.ExecutorService,ScheduledExecutorService,ThreadFactory and Callable classes.
>what are  some of the improvements in Concurrency API in java 8 ?
ConcurrentHashMap compute(),forEach(),forEachEntry(),forEachKey(),forEachValue(),merge() reduce() and search() methods
>java Thread Join Example
java Thread join method can be used to pause the current thread execution until unless the specified  thread is dead.
>Thread safety in java 
Synchronization is the easiest and most widely used tool for thread safety in  java.
use Atomic Wrapper classes from java.util.concurrent.atomic package e.g AtomicInteger
use of locks from java.util.concurrent.locks package .
use Thread safe collection classes 
using volatile keyword with variable to make every thread read the data from memory not read from thread cache /
//synchronize(this) will lock the object before entering in the synchronize block ,java synchronization keyword can not be used for constructor and variables
private Object mutex=new Object();

synchronized (mutex)
{
 count++;
}
// Thread.sleep(Intger.MAX_VALUE);
>DeadLock in java Example
>how to detect Deadlock in java 
to detect deadlock in java we need to look at the java thread dump of the application
>java ThreadLocal Example 
java ThreadLocal is  used to create thread local variables.
>AtomicInteger in  java 
java Callable and Future are used a lot in multithreaded programming 
java.util.concurrent.Future Object using Future Object we can find out the status of the Callable task and get the returned Object it provides the get() method that can wait for the Callable to finish and then return the result.
java Callable Future interfaces that we can use to get the concurrent processing benefitsof threads as well as thay are 
>how to avoid the concurrentModificationException in multi-threaded environment
you can convert the list to an array and then iterate on the array this approach works well for small or medium size list but if the list is large then it will affect the performance a lot
you can lock the list while iterating by putting it into a synchronized block
you can use ConcurrentHashMap and CopyOnwriteArrayList classes
>what is multithreading ?
Multithreading is a process of executing multiple threads simultaneously  threads shares same address space.
thread is a lightweight
cost of communication between threads pocess is low
>what is thread ?
Thread is a lightweight subprocess .it is a separate path of execution .it is called separate path of execution because each thread runs in  a separate stack frame .
if we  start a thread 
//daemon thread is basically a low priority threads that provides the background support to the user define  thread it provides services to the user threads.
>what is shutdown hook ?
the shutdown hook is a thread that invokes implicitly before the jvm shuts down we can use it perform  clean up resources.
//if we want to break out the sleep or wait state of a thread.
//Callable interface is a generic parameterized interface
>what is CyclicBarrier and CountDownLatch in java ?
//we can use CyclicBarrier by reset() method which resets Barrier to its initial state
//happens before relationship
//race-conditon occurs in a parallel execution of a program by multiple threads at same time
//Thread.uncaughExceptionHandler is an Interface
IllegalMonitorStateException
//synchronize collections locks the whole collection They achieve where concurrent collection does not locks the whole collection like lock stripping  like ConcurrentHashMsp Divides the whole Map into several segements and locks only the relevant segments which allows multiple threads to access other segments of same conucurrentHashMap eithout locking
similarly CopyOnWriteArrayList allows multiple reader threads to read without  synchronization and when a write happens it copies the whole ArrayList and swap with a newer one.
//stack is a memory which is closely associated with thread s.botth are the part of memories in java  application each threads has their own stack variables are stored in the stack memory method parameters and call stack methods stored in one thread stack is not visible to other where as the heap is the common memory area which is shared by all the threads	
//memory management in java.
there are three parts in java jvm
young generation
old generation
permanent generation
young generation is a place where newly created Objects are created .when young generation is filled garabage collection is performed this garbage ccollection is called Minor GC young Generation is divided into three parts Eden Memory and two Survivor Memory spaces.
Old generation memory contains the Objects that are long lived and survived after rounds of Minor GC.usually garbage collection is performed in old Generation memory when it is full.old Generation Garbage collection is performed in Old Generation memory when it is full Old Generation Garbage Collection is called Major GC and usually takes longer time.
Stop the world Event
All the Garbage Collection are stop the world events because all application threads are stopped until the operation completes.
since young generation keeps short live objects Minor GC is very fast and application does not get affected by this .
however Major GC takes longer time because it checks all the live Objects Major GC should be minimized because it will make your application unresponsive for the garbage collection duration 
Permanent Generation or Perm Gen
Permanent Generation contains the metadata required by the JVM to describe the classes and methods used in the application permanent Generation is not part of java Heap Memory.permanent Gen  conatains Java SE library classes and methods .permanent Generation Objects are garbage collected in a full garbage  collection 
java memory model-Method Area
method area is a part of space in Perm gen and used to  store class structure  and code for methods and constructors
Memory pool: Memory Pools are created by the JVM memory manager to create a pool of immutable Objects if .String Pool is a good example of this kind of memory pool memory pool belongs to Heap or Permanent Gen 
Runtime Constant Pool :
stack Memory is used for the execution of a thread they contain method specific values that are short lived and references to other Objects in the heap
//java Garbage Collection Types 
there are five types of garbage collection strategy  for the application 
1>Serial GC
2>Parallel GC
3>Paraller old GC
4>Concurrent Mark Sweep
5>G1 Garbage Collector
//if excaption is not caugh then thread will be die.	
The ConcurrentHashMap and CopyOnWriteArrayList implementations provide much higher concurrency and scalability while preserving the thread  safety with   some minor 
>what is the difference between static memory allocation and dynamic memory allocation ?
static memory allocation is a process in which declared variables are allocated memory at compile time most of the declared variables have static memory this kind of assigning the address of a variable to a pointer is known as static memory allocation.
>what is thread pool ? why should you thread pool in java ?
creating thread is expensive in terms if time and resource if you create the thread at time request processing it will slow down your response time also there is a limited number of threads a process can create to avoid these issues a pool if thread is created when application is start up and threads  are reused for request processing this pool of thread is known as thread pool  and threads are known as worker thread  there many thread pool in java .
like single thread pool which process one task at a time fixed thread pool a pool of fixed number of threads cached thread pool an expandable thread pool suitable for application 
// Producer Consumer Solution using BLockingQueue in  java
produces consumer problems is one of the classic multithreading problems in computer it is  tricky because it involves inrer thread communication 
ArrayLinkedBlockingQueue and LinkedBlockingQueue
BlockingQueue provides a put() methods to store the elements and take() method to retrieve  the element 
the main difference between in livelock and deadlock is that in livelock states of the procedded involed in the livelock constantly change with 
>how do you check if a thread holds a lock or not ?
there is a  method  in java.lang.Thread class holdsLock() it returns true if and only if the current thread holds the monitor lock on the specified Object 
IllegalMonitorStateException throw when they get called from non synchronized context so i said there is  also one method in java thread class that gives an idea  that the current running holds the lock of an Object holdsLock(Object obj) which returns true or false based on wether threads holds a lock on the Object passed 
>which parameter of JVM is used  to control stack size of a thread ?
-Xss parameter is used to control stack size of thread in java 
>what is ReentrantLock in java ?
ReentrantLock is a concrete implementation of lock interface provided in java  concurrency package  from java reentrant is a mutual exclusive lock similar to implicit locking provided by the synchronize keyword in java.
put() method and Take method
>what is the difference between ReentrantLock and synchronized keyword 
the main difference between ReentrantLock and synchronize keyword is that synchronize keyword does not provide fairness 
ReentrantLock provides a method tryLock() which acquires lock only if it is available or not held by any other thread this reduce blocking of thread waiting for lock in java application .
ReentrantLock class defines a method tryLock() and lockInterruptibly()
>what is yield method in thread ?
The java.lang.Thread.yield() method causes the currently executing thread Object to temporarily pause and allow other threads to execute .it is static method with void return type.
>what is the concurrency level of ConcurrentHashMap in java ?
16
>what is semaphore ?
Semaphore is a thread synchronization construct that can be used either send signals between threads to avoid missed signals and guide a critical section 
java.util.concurrent.semaphore class is a counting semaphore it has two main methods 
acquire()
release()
>what happens when if you submit a task when the queue of the thread pool is already filled ?
ThreadPoolExecutors submit() method throws RejectedExecutionException if the task can not be scheduled for execution 
>what is the difference between the submit and execute method thread pool in java ?
both methods are ways to submit task to thread pools but there is a difference between them execute(Runnable command) is defined in Executor interface and executes given task in future but more importantly it does not retyrn anything it's return type is void.
//method of ExecutorService interface submit() with future return object
ThreadPoolExecutor or ScheduledThreadPoolExecutor gets these methods
>what is blocking  method in java ?
blocking method in java is a method which blocks until the task is blocked
>what is the difference between invokeAndWait and invokeLater in java?
>what is Busy spin in multi threading ?
busy spin is a technoque which concurrent programmers employ to make a thread  wait on certain condition 
>what is difference between volatile and atomic variable  in java ?
volatile keyword provide you happens before guarantee that write will happen before any subsequent write.it does not guarantee atomicity AtomicInteger class provides atomic  it provides the method getAndIncrement 
>What happens if a thread throws an Exception inside synchronized block?
This is one more tricky question for average Java programmer, if he can bring the fact about whether lock is released or not is a key indicator of his understanding. To answer this question, no matter how you exist synchronized block, either normally by finishing execution or abruptly by throwing exception, thread releases the lock it acquired while entering that synchronized block. This is actually one of the reasons I like synchronized block over lock interface, which requires explicit attention to release lock, generally this is achieved by releasing the lock in a finally block.
>what is double  checked locking of singleton ?
>what is fork-join framework in java ?
>when threads are not lightweight process in java ?
threada are light weight process only if threads of same process are execting  concurrently but if threads of different processors are executing concurrently then threads are heavy weight.
>what is race condition in multithreading and how can we solve it ?
when more than one thread try to access same resources with synchronization  causes race condition .
>why wait notify and notifyall are in the Object class and not in Thread class ?
Every Object has a monitor acquiring that monitors allow thread to hold lock on Object but thread does not have any monitors .these methods are called on objects only when method is called on Object 	
//visual vm is the most popular way to generate thread dump 
>why destroy() method is depricted ?
destroy() method is a deadlock prone if the target thread holds a lock and destroy() method is called on the thread then no other thread can lock this Object Deadlock formed are similar to deadlock formed when suspend() and resume methods are called  it results in deadlock formation these deadlock are frozen process .calling destroy() method on threads throw runtimeException  NoSuchMethodError
>as stop() method is depricted ,how can we terminate or stop infinitely running thread in java ?
infinite threads can stop using  boolean variable.
infinitely running thread can be stoped using interrupt() method.
calling the Thread.stop() method causes it to release all of the monitors that it has locked if any of the objects previously protected by these monitors were in an inconsistent state
>what id significance of yield() method .what does it put thread in ?
yield is native method in  java 5 yield method  is used to call sleep() method giving all the threads of same or higher priority to execute 
>what is the difference between Object lock and class lock ?
thread can acquire the Object lock by entering synchronize block or by entering the synchronize method.
threads of different objects can enter  same method at same time.
multiple may exist on same or different objects of the class but only one thread can enter static synchronized method at a time
//ThreadPool implementation internally uses LinkedBlockingQueue//
>How to create the threadPool in java ?
ThreadPool threadpool=new ThreadPool(2);
>what is singnificance of using ThreadLocal ?
ThreadLocal is a class which provides threadLocal variables .every thread has  it's own ThreadLocal value that makes ThreadLocal  value threadsafe as well
Creating the ThreadLocal
private ThreadLocal<String> threadlocal=new ThreadLocal<String>();
>what is busy spin ?
when one thread loops continuously waiting  for another thread signal
>what do you mean by thread starvation ?
when thread does not get enough CPU forits execution Thread starvation happens
>what happen if we run a thread twice?
if we run a thread twice then it will thrown java.lang.IllegalThreadStateException
>what is synchronization in respect to multithreading in java ?
synchronization is the capability to control the access of multiple threads to any shared resource at a time . 
>what is the difference between Thread.start().run() method ?
start() method is a native method job of start method is that running the run method in a thread if 
>when InvalidMonitorStateException is thrown ?
when an Object throws thr wait(),notify(),notifyAll() method outside the synchronized block or synchronize method 
>condition  when deadlock is occur ?
when two threads call Thread.join() on each other
when two thread used the nested synchronization to lock two Obects and the blocks lock the same Objects in different order.
>what is starvation ? and what is a liveLock ?
LiveLock: LiveLock occurs when all threads are blocked or otherwise uable to proceed due to unavailability of required resources and the non-existence of any unblock thread to make those resources available
liveLock will in a programme when all threads will executes the Object.wait(0) on an Object with zero parameters programme is live locked  and can not proceed until one or more threads  call Object.notify() or Object.notifyAll() on the relevant Objects when all the threads in a program are stuck in infinite loops.
>how to find a deadlock has occured in java ? How to detect a Deadlock in java ?
java provides mechanism by which can we find the deadlock situation  
java.lang.management.ThreadMXBean interface is management interface for the thread system of the java virtual machine it has two methods which can leverage to detect deadlock in a java application
1>findMonitorDeadLockedThreads()
2>findDeadlockedThreads()
//there is no concept of parent child relationship in threads .each and every  thread created is independent of thread who created it 
>how exceptions are handled in case of multithreading scenario ? who will handle Exceptions if there is no hanlder ?
AT thread level
each thread have there own Exception handling mechanism and can be caugh and  configure in the 
>what do we understand by the term concurrency ?
Concurrency is the ability of the program to execute several computation simultaneously .this can be achieved by distributing the  computations over the available cpu cores of a machine or even over different machines within the same network .
>what is scheduler ?
 A Scheduler is the implementation of scheduling algorithm that manages access of processes and threads to some limited resources like the processor or some I/O main aim of schedular is that load balancing for the available processes threads that gurantees that each process thread get an appropiate time frame to access the request resource excluively.
>how can a java application access the current thread ?
The Current Thread can be access by calling the currentThread() of jdk class java.lang.Thread
java.lang.Thread.state
>what is the purpose of thread groups ?
Each thread belongs to a group of threads JDK class have java.lang.ThreadGroup provides some methods to handle a whole group of Thread 
>how do we stop a thread in java ?
To stop a thread one can use a volatile references to the pointing to the current thread that can be set to null by other threads to indicate the current thread should stop its execution 
>why should a thread not be stopped by calling its method  stop() ?
a thread should not be stopped by using the deprected method stop() of java.lang.Thread as a call of this method causes thr thread to unlock all monitors it has acquired  if any Object protectd by one of the released lock was in an inconsistent state this  state gets visible to all threads 
>what do we understand by the term scalability ?
the term scalability means to improve the performance by adding further resources to it .
>what is ExecutorService ?
java.util.concurrent.ExecutorService interface is a new way of executing tasks asynchrously in the background it is very similar to threadpool
there are three ways of creating Executor Services
1>ExecutorService ex=Executors.newSingleThreadExecutor();
2>ExecutorService ex=Executors.newFixedThreadpool()
3>ExecutorService ex=Executors.newScheduledThreadPool()
we can check that the ExecutorService task executed successfully
we can use a Future to check the return value
Future future=ex.submit(new Runnable() {
  public void run()
{
  s.o.p();}
});
future.get();
//A JDBC driver is a software component that enables a java application to interact with a database
>what is API
API(application programming interface) is a document that contains description of all the features of a product or software.it represents classes and interfaces that software program follow to communicate with each other.there are 4 types of driver present in JDBC driver
1)JDBC-ODBC bridge driver
2)native api driver
3)network protocol driver
4)thin driver
there are 5 steps to connect any java application with database 
1)Register the driver class
2)create the Connection
3)create the Statement
4)Execute Querry
5)close the connection
>java database connectivity in java application
there are 3 types of Queries 
1)DDL:data definition language :create,alrer,drop //public boolean execute(String query);
2)DML:data manipulation language:insert,update,delete //public int executeUpdate(String query);
3)DRL:data retrivation language:select //public ResultSet exeQuerry(String query);
//java connection for oracle and mysql
Class.forName("com.mysql.jdbc.Driver")
Connection con=DriverManager("jdbc:mysql://localhost:3306/database name")


for Oracle

Class.forName("oracla.jdbc.driver.OracleDriver")
Connection con=DriverManager.getConnetion("jdbc:oracle:thin:@localhost:1521:xe")
//store image in database in oracle database	
you can store the image in the database in java by the help PreparedStatement interface 
The setBinaryStream method of preparedStatement can save the image in the database
using the setBinaryStream method we can sava the image in the database 
public void setBinaryStream(int paramIndex,InputStream stream)throws SQLException
public void setBinaryStream(int paramIndex,InputStream stream)throws SQLException
	for the  storing image into the database ,BLOB(Binary large Object)datatype is used in the table 
create table "imgtable"
("name" varchar2(400),
 "photo" BLOB
)
//java Buffered reader class is used to read the text from character-based  input stream it can be used to read data line by line by readLine() merhod it makes the performance fast //
//CallbleStatement interfae:this interface is used to call the stored procedured and functions.we have business logic on the database by the use of stored procedure and functions that will make the performance better because these are precompiled//
//File class in javaio javatpoint
File f=new File("d://abc.txt");
accept the file name or directory name through command  line args
String s=args[0];
File f=new File(fname);
//there is a method in java character class which converts the character into  numeric value 
Character.getNumericValue(c);
//decimal to binary in java 
we can cnonvert decimal to binary Integer.toBinaryString();
and we can convert binary to decimal using  Integer.parseInt()
>what is driver ?
driverr is a software component that enabling a java application to iteract with a database jdbc drivers are anlogous to odbc drivers s
>java.sql.DriverManager class is used to get the connection object and using connection object we can create the connection and access the data from the database to open a connection with database we use connection obect to open the connection with the data base.
first step is to load the JDBC driver : the first you need to do before you can open a database connection is to load the jdbc driver for the database 
Class.forName("driverclassName");
each jdbc driver has a primary driver class that initializes the driver when it is loaded 
//DriverManager class is static class in the java this class manages the set of java Database Connectivity drivers that are available for an application to use
the preparedStatement interface extend the Statement interface 
>ResultSet Object class 
ResultSet Type concurrency ans holdability 
PreparedStatement pstmt=con.prepareStatement(sql,ResultSet.Type_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY,ResultSet.CLOSE_CURSORS_OVER_COMMIT)

ResultSet.TYPR_FORWARD_ONLY
ResultSet.TYPE_SCROLL_INSENSITIVE
ResultSet.TYPE_SCROLL_SENSITIVE
//some methods of resulset interface
getInt()
getString()
next()
previous()
afterLast()
beforeFirst()
findColumn()
isAfterLast()
isBeforeFirst()
refreshRow()
absolute()
relative()
//ResultSet Concurrency determines wether the ResultSet can be updated or only read 
//note that the ResultSet is of three type 
Type
Concurrency
Holdability

resultSet concurrency determines wether the resultSet  can be updated or only read
resultSet interface has three types 
Type
Concurrency
Holability

Type:
     ResultSet.Type_FORWARD_ONLY
     ResultSet.Type_SCROLL_INSENSITIVE
     ResultSrt.Type_SCROLL_SENSITIVE

Concurrenc:
          ResultSet.CONCUR_READ_ONLY
          ResuktSet.CONCUR_UPDATABLE
Holdability :
           ResultSet.CLOSE_CURSORS_OVER_COMMIT
           ResultSet.HOLD_CURSOR_OVER_COMMIT

getRow()
getType()
relative()

>Advantage of using PreparedStatement 
prepare statement helps us in preventing SQL injection attacks because it automatically escapes the special characters
it allow us to execute dynamic query with parameter input
it provides different types of methods like setter  methods to set the input parameters for the query
it uses batch processing methods for executing multiple queries
it helps us to write object oriented code with setter methods 
it returns FORWARD_ONLY so we can only move in forward direction
preparedStatement variables are starts with 1
//stmt.registerOutParametrt(6,java.sql.Types.B)

>java JDBC Transaction Management and Savepoint.
Transaction Management in java is required when we are dealing with relational databases , 
//There are 4 isolation layer in jdbc

READCOMMITTED
READUNCOMMITTED
REPEATABLEREAD
SERIALIZABLE
>java DataSource and LooseCoupling
Most of the times we are looking  for loose coupling for connectivity so that  we can switch between databases easily .connction pooling for the transaction management and distributed  systems support.DataSource is a interface is present in javax.sql package and it only declares two overloaded methods getConnetion() and getConnection(String str1,String str2).
JDBC DataSource 
it is responsibility of different Database vendors to provide different kinds  of implementation of datasource interface for MYSQL JDBC DRIVER
"com.mysql.jdbc.jdbc2.optional.MysqlDataSource" class and for oracle database driver implementation it with "oracle.jdbc.pool.OracleDataSource class". 

>how many types of jdbc drivers are there ?
there are four types of jdbc drivers  "JDBC-ODBC bridge driver,Native API dirver, Network protocol driver,thin driver or Native Protocol driver.
JDBC/ODBC: these  ODBC(open database connectivity) driver for the database to be installed.it is used for local connection.
NATIVE API(partially java driver):this type of driver uses a database API to interact with the database 
Network Protocol Driver:it makes use middleware tier between the calling program and the database the client driver communicates with net server using database independent protocol and the net server translates this protocol  into database .

>what is the difference between setFetchSize(int) and setMaxRows(int)
 setFetchSize(int) methods defines the number of rows that will be  read from the database when the ResultSet needs more rows where as setMaxRows(int) method of the ResultSet specifies how many rows a ResultSet can contain at a time .
 in setFetchSize(int) method in the java.sql.Statement interface will set the default value for all the ResultSet derived from the that Statement where as in SetMax(int) default value is 0 all rows will be included in the ResultSet.
 the setMaxRows() effects the client side JDBC Object while the setFetchSize() affects how the database returns the ResultSet data.

 >what is the benefit of having jdbc RowSet implementation ?
it makes possible to use the ResultSet Object as javaBeans component.
it can be used to make a ResultSet object scrollable and updatable .all Rowset Objects are by default scrollable and updatable.

>how can  you load the drivers ?
it is very simple and involves just one of code  to load the drivers we want to use   Class.forName("sun.jdbc.odbc.JdbcOdbcDriver")"

>what is significant of JDBC  ?
jdbc stands for java database connectivity,it is a standard java Api ,its  purpose is to interact with relational database in java,jdbc have  the set of classes and interfaces which can be used from any java application

>Describe how the JDBC application works ?
basically a jdbc application divided into two layers
Driver layer and application layer
driver layes  consist of DriverManager Class and the JDBC drivers.
the application layers begings after the putting a request to the DriverManager for the Connection.the appropriate driver chosen and used for establishing  the connectio.this connection is linked with the application layer  and application needs the connection for creating the statement kind Objects by which the results are obtained .

>how a database driver can be loaded with JDBC ?
by providing the JAR file the driver must be properly configured the jar file is placed in the classpath.it is not necessary to explicitly load the JDBC drivers by using the code like Class.forName() to register in the JDBC driver.

>what is the JDBC Driver interface do ?
the jdbc interface provides vendoe-specific customized implementations of the abstract classes.

























       































